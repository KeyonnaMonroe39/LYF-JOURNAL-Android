plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
}

android {
    compileSdkVersion 33
    // construct version name
    def versionMajor = 1
    def versionMinor = 0
    def versionPatch = 0
    def code = 1
    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 33
        versionCode code
        // not set as String because versionName is not defined in buildTypes
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        // test options
        testOptions.unitTests.includeAndroidResources = true
        // test runner and consumer rules
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        // there are two buildTypes {debug, release}. The only difference between debug
        // and release buildTypes is that code debug logging is enabled in debug environment,
        // otherwise logging is disabled.
        debug {
            buildConfigField "boolean", "DEBUG_MODE", "true"
            buildConfigField "String", "VERSION_NAME", "\"${defaultConfig.versionName}\""
            buildConfigField "String", "VERSION_CODE", "\"${code}\""
            manifestPlaceholders = [build_version: "${versionMajor}.${versionMinor}.${versionPatch}"]
            // test coverage
            testCoverageEnabled true
        }
        release {
            buildConfigField "boolean", "DEBUG_MODE", "false"
            buildConfigField "String", "VERSION_NAME", "\"${defaultConfig.versionName}\""
            buildConfigField "String", "VERSION_CODE", "\"${code}\""
            manifestPlaceholders = [build_version: "${versionMajor}.${versionMinor}.${versionPatch}"]
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        // returns whether lint should check for fatal errors during release builds. Default is true.
        // If issues with severity "fatal" are found, the release build is aborted.
        checkReleaseBuilds false
        // whether lint should set the exit code of the process if errors are found
        abortOnError false
    }
//    packagingOptions {
//        exclude 'META-INF/DEPENDENCIES'
//        exclude 'META-INF/LICENSE'
//        exclude 'META-INF/LICENSE.txt'
//        exclude 'META-INF/license.txt'
//        exclude 'META-INF/NOTICE'
//        exclude 'META-INF/NOTICE.txt'
//        exclude 'META-INF/notice.txt'
//        exclude 'META-INF/ASL2.0'
//        exclude("META-INF/*.kotlin_module")
//    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
    }
}

dependencies {
    // Firebase database
    //implementation 'com.google.firebase:firebase-database:20.0.6'

    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:30.5.0')

    // Add the dependency for the Realtime Database library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-database'

    // gson
    implementation 'com.google.code.gson:gson:2.9.0'

    // okHttp
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.9'

    // work
    // [02.26.22] do not upgrade passed 2.7.1. This causes "test events were not received"
    // Tried with upper versions 2.7.2. Maintain current version until there is a fix.
    def work = '2.7.1'
    implementation "androidx.work:work-runtime-ktx:$work"

    // androidx
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.lifecycle:lifecycle-process:2.5.1'
    def room = "2.4.3"
    implementation "androidx.room:room-runtime:$room"
    kapt "androidx.room:room-compiler:$room"

    // annotation
    implementation 'androidx.annotation:annotation:1.5.0'

    // coroutines
    def coroutines = '1.6.3'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"

    // unit tests
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}