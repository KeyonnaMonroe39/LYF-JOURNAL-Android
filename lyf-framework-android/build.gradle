plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdkVersion 31
    // construct version name
    def versionMajor = 1
    def versionMinor = 0
    def versionPatch = 0
    def code = 1
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 31

        // test options
        testOptions.unitTests.includeAndroidResources = true
        // test runner and consumer rules
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        // there are two buildTypes {debug, release}. The only difference between debug
        // and release buildTypes is that code debug logging is enabled in debug environment,
        // otherwise logging is disabled.
        debug {
            buildConfigField "boolean", "DEBUG_MODE", "true"
            buildConfigField "String", "VERSION_NAME", "\"${defaultConfig.versionName}\""
            buildConfigField "String", "VERSION_CODE", "\"${code}\""
            manifestPlaceholders = [build_version: "${versionMajor}.${versionMinor}.${versionPatch}"]
            // test coverage
            testCoverageEnabled true
        }
        release {
            buildConfigField "boolean", "DEBUG_MODE", "false"
            buildConfigField "String", "VERSION_NAME", "\"${defaultConfig.versionName}\""
            buildConfigField "String", "VERSION_CODE", "\"${code}\""
            manifestPlaceholders = [build_version: "${versionMajor}.${versionMinor}.${versionPatch}"]
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    lint {
        abortOnError false
        checkReleaseBuilds false
    }
}

dependencies {
    // youtube player
    implementation 'com.google.apis:google-api-services-youtube:v3-rev183-1.22.0'

    // gson
    implementation 'com.google.code.gson:gson:2.9.0'

    // okHttp
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.6'

    // coroutines
    def coroutines = '1.6.0-native-mt'
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines") {
        exclude group: 'org.jetbrains.kotlinx', module: 'kotlinx-coroutines-core-jvm'
    }
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines") {
        exclude group: 'org.jetbrains.kotlinx', module: 'kotlinx-coroutines-core-jvm'
    }

    // unit tests
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}